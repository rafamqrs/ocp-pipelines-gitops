apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"tekton.dev/v1beta1","kind":"Pipeline","metadata":{"annotations":{},"name":"hello-service-spring-dev-ci","namespace":"spring-pipeline"},"spec":{"params":[{"default":"hello-service","name":"SOURCE_GIT_CONTEXT_DIR","type":"string"},{"default":"hello-service","description":"The application name","name":"APP_NAME","type":"string"},{"default":"hello-spring-dev","description":"Namespace where the buildconfig will be or is located","name":"NAMESPACE","type":"string"},{"default":"hello-spring-dev","description":"Namespace where the buildconfig will be or is located","name":"NAMESPACE_DEV","type":"string"},{"default":"http://nexus3-nexus.apps.cluster-n2gjh.n2gjh.sandbox1456.opentlc.com/repository/mcentral/","description":"Maven mirror for Maven Builds","name":"MAVEN_MIRROR_URL","type":"string"},{"default":"http://nexus3-nexus.apps.cluster-n2gjh.n2gjh.sandbox1456.opentlc.com/repository/mcentral/","description":"External Registry (Nexus) for the Images","name":"EXTERNAL_REG_NEXUS_URL","type":"string"}],"tasks":[{"name":"git-clone","params":[{"name":"url","value":"https://github.com/almeidarommel/demo-pipeline-tkn"},{"name":"revision","value":"main"},{"name":"submodules","value":"true"},{"name":"depth","value":"1"},{"name":"sslVerify","value":"true"},{"name":"deleteExisting","value":"true"},{"name":"verbose","value":"true"},{"name":"gitInitImage","value":"registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:da1aedf0b17f2b9dd2a46edc93ff1c0582989414b902a28cd79bad8a035c9ea4"}],"taskRef":{"kind":"ClusterTask","name":"git-clone"},"workspaces":[{"name":"output","workspace":"output"}]},{"name":"generate-tag","taskRef":{"kind":"Task","name":"generate-tag"}},{"name":"jkube-build","params":[{"name":"MAVEN_IMAGE","value":"registry.access.redhat.com/ubi8/openjdk-11:1.3"},{"name":"CONTEXT_DIR","value":"./$(params.SOURCE_GIT_CONTEXT_DIR)"},{"name":"GOALS","value":["package","oc:build","-Djkube.namespace=$(params.NAMESPACE)","-Djkube.generator.name=$(params.APP_NAME)"]},{"name":"MAVEN_MIRROR_URL","value":"$(params.MAVEN_MIRROR_URL)"},{"name":"SERVER_USER","value":"admin"},{"name":"SERVER_PASSWORD","value":"admin123"}],"runAfter":["git-clone","generate-tag"],"taskRef":{"kind":"ClusterTask","name":"maven"},"workspaces":[{"name":"source","workspace":"app-source"},{"name":"maven-settings","workspace":"maven-settings"}]},{"name":"oc-tag-image-for-dev","params":[{"name":"SCRIPT","value":"oc tag $(params.NAMESPACE)/$(params.APP_NAME):latest $(params.NAMESPACE)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)"}],"runAfter":["jkube-build"],"taskRef":{"kind":"ClusterTask","name":"openshift-client"}},{"name":"sonarqube-scanner","params":[{"name":"SONAR_HOST_URL","value":"http://sonar-sonarqube.apps.cluster-n2gjh.n2gjh.sandbox1456.opentlc.com"},{"name":"SONAR_PROJECT_KEY","value":"test-spring"},{"name":"SONAR_AUTH_TOKEN","value":"sqp_5afbab7e94eacf8137be5375b904fe2ae1a6406f"}],"runAfter":["openshift-client-1-5-0"],"taskRef":{"kind":"Task","name":"sonarqube-scanner"},"workspaces":[{"name":"source","workspace":"output"}]},{"name":"push-img-to-external-registry","params":[{"name":"srcImageURL","value":"docker://image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)"},{"name":"destImageURL","value":"docker://nexus3-nexus.apps.cluster-n2gjh.n2gjh.sandbox1456.opentlc.com/repository/mdocker/$(params.NAMESPACE_DEV)/$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)"},{"name":"srcTLSverify","value":"false"},{"name":"destTLSverify","value":"false"}],"runAfter":["sonarqube-scanner"],"taskRef":{"kind":"ClusterTask","name":"skopeo-copy"},"workspaces":[{"name":"images-url","workspace":"output"}]},{"name":"update-kustomize-repo","params":[{"name":"gitRepositoryUrl","value":"https://github.com/almeidarommel/hellosvc-kustomize-repo"},{"name":"gitRepositoryRevision","value":"prod"},{"name":"gitPath","value":"hello-service-kustomize/overlays/development"},{"name":"fileName","value":"deployment-patches.yaml"},{"name":"image","value":"hello-service"},{"name":"imageTag","value":"prod-\\$(tasks.generate-tag.results.image-tag)"},{"name":"verbose","value":"true"}],"runAfter":["push-img-to-external-registry"],"taskRef":{"kind":"Task","name":"update-kustomize-repo"}},{"name":"openshift-client-1-5-0","params":[{"name":"SCRIPT","value":"oc help"},{"name":"VERSION","value":"latest"}],"runAfter":["oc-tag-image-for-dev"],"taskRef":{"kind":"ClusterTask","name":"openshift-client-1-5-0"}}],"workspaces":[{"name":"output"},{"name":"maven-settings"},{"name":"app-source"}]}}
  creationTimestamp: "2022-07-05T19:41:06Z"
  generation: 19
  managedFields:
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec: {}
    manager: kubectl-create
    operation: Update
    time: "2022-07-05T19:41:06Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2022-07-05T19:42:52Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:finally: {}
        f:params: {}
        f:resources: {}
        f:tasks: {}
        f:workspaces: {}
    manager: Mozilla
    operation: Update
    time: "2022-07-06T02:23:45Z"
  name: hello-service-spring-dev-ci
  namespace: spring-pipeline
  resourceVersion: "694142"
  uid: 306885f5-de96-4bad-a64e-f9c98b8cb806
spec:
  params:
  - default: hello-service
    name: SOURCE_GIT_CONTEXT_DIR
    type: string
  - default: hello-service
    description: The application name
    name: APP_NAME
    type: string
  - default: hello-spring-dev
    description: Namespace where the buildconfig will be or is located
    name: NAMESPACE
    type: string
  - default: hello-spring-dev
    description: Namespace where the buildconfig will be or is located
    name: NAMESPACE_DEV
    type: string
  - default: http://nexus-nexus.apps.cluster-dd46.dd46.example.opentlc.com/repository/maven-repo/
    description: Maven mirror for Maven Builds
    name: MAVEN_MIRROR_URL
    type: string
  - default: http://nexus-registry-nexus.apps.cluster-dd46.dd46.example.opentlc.com/repository/nexus-registry/
    description: External Registry (Nexus) for the Images
    name: EXTERNAL_REG_NEXUS_URL
    type: string
  resources:
  - name: https://github.com/rafamqrs/demo-pipeline-tkn.git
    type: git
  tasks:
  - name: git-clone
    params:
    - name: url
      value: https://github.com/rafamqrs/ocp-pipelines-gitops.git
    - name: revision
      value: main
    - name: submodules
      value: "true"
    - name: depth
      value: "1"
    - name: sslVerify
      value: "true"
    - name: deleteExisting
      value: "true"
    - name: verbose
      value: "true"
    - name: gitInitImage
      value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:da1aedf0b17f2b9dd2a46edc93ff1c0582989414b902a28cd79bad8a035c9ea4
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: output
  - name: generate-tag
    taskRef:
      kind: Task
      name: generate-tag
  - name: jkube-build
    params:
    - name: MAVEN_IMAGE
      value: registry.access.redhat.com/ubi8/openjdk-11:1.3
    - name: CONTEXT_DIR
      value: ./$(params.SOURCE_GIT_CONTEXT_DIR)
    - name: GOALS
      value:
      - package
      - oc:build
      - -Djkube.namespace=$(params.NAMESPACE)
      - -Djkube.generator.name=$(params.APP_NAME)
    - name: MAVEN_MIRROR_URL
      value: $(params.MAVEN_MIRROR_URL)
    - name: SERVER_USER
      value: admin
    - name: SERVER_PASSWORD
      value: admin123
    runAfter:
    - git-clone
    - generate-tag
    taskRef:
      kind: ClusterTask
      name: maven
    workspaces:
    - name: source
      workspace: app-source
    - name: maven-settings
      workspace: maven-settings
  - name: oc-tag-image-for-dev
    params:
    - name: SCRIPT
      value: oc tag $(params.NAMESPACE)/$(params.APP_NAME):latest $(params.NAMESPACE)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
    runAfter:
    - jkube-build
    taskRef:
      kind: ClusterTask
      name: openshift-client
  - name: sonarqube-scanner
    params:
    - name: SONAR_HOST_URL
      value: https://sonarqube-sonarqube.apps.cluster-dd46.dd46.example.opentlc.com/
    - name: SONAR_PROJECT_KEY
      value: hello-spring-dev
    - name: SONAR_AUTH_TOKEN
      value: sqp_1303fa6ae057b94fbb5070f39434bea19a451126
    runAfter:
    - apply-manifests-dev
    taskRef:
      kind: Task
      name: sonarqube-scanner
    workspaces:
    - name: source
      workspace: output
  - name: push-img-to-external-registry
    params:
    - name: srcImageURL
      value: docker://image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
    - name: destImageURL
      value: docker://nexus-registry-nexus.apps.cluster-dd46.dd46.example.opentlc.com/repository/nexus-registry/$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)
    - name: srcTLSverify
      value: "false"
    - name: destTLSverify
      value: "false"
    runAfter:
    - sonarqube-scanner
    taskRef:
      kind: ClusterTask
      name: skopeo-copy
    workspaces:
    - name: images-url
      workspace: output
  - name: update-kustomize-repo
    params:
    - name: gitRepositoryUrl
      value: https://github.com/almeidarommel/hellosvc-kustomize-repo
    - name: gitRepositoryRevision
      value: prod
    - name: gitPath
      value: hello-service-kustomize/overlays/development
    - name: fileName
      value: deployment-patches.yaml
    - name: image
      value: hello-service
    - name: imageTag
      value: prod-\$(tasks.generate-tag.results.image-tag)
    - name: verbose
      value: "true"
    runAfter:
    - push-img-to-external-registry
    taskRef:
      kind: Task
      name: update-kustomize-repo
  - name: apply-manifests-dev
    params:
    - name: manifest_dir
      value: k8s
    - name: namespace
      value: hello-spring-dev
    runAfter:
    - oc-tag-image-for-dev
    taskRef:
      kind: Task
      name: apply-manifests
    workspaces:
    - name: output
      workspace: output
  workspaces:
  - name: output
  - name: maven-settings
  - name: app-source
