apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: Update Kustomize Git Repository
  creationTimestamp: "2022-07-05T18:57:31Z"
  generation: 1
  managedFields:
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:tekton.dev/displayName: {}
      f:spec:
        .: {}
        f:params: {}
        f:steps: {}
        f:volumes: {}
    manager: Mozilla
    operation: Update
    time: "2022-07-05T18:57:31Z"
  name: update-kustomize-repo
  namespace: spring-pipeline
  resourceVersion: "60632"
  uid: cebea67e-a44d-42db-9e37-dc885aeebfce
spec:
  params:
  - description: URL of the Git repository to update
    name: gitRepositoryUrl
    type: string
  - default: master
    description: Branch or Tag to push the update to
    name: gitRepositoryRevision
    type: string
  - default: .
    description: Path in the repository to work in.
    name: gitPath
    type: string
  - default: ./deployment-patch.yaml
    description: Name of the file to be updated
    name: fileName
    type: string
  - description: The image to be written into the YAML
    name: image
    type: string
  - description: The image tag to be written into the YAML
    name: imageTag
    type: string
  - default: "true"
    description: Log the commands used during execution
    name: verbose
    type: string
  steps:
  - image: alpine/git:v2.26.2
    name: git-checkout
    resources: {}
    script: |
      #!/usr/bin/env sh

      set -eu -o pipefail

      if [[ "$(params.verbose)" == "true" ]] ; then
        set -x
        echo "**** Cloning $(params.gitRepositoryUrl) into $(pwd)/repository"
      fi

      git clone "$(params.gitRepositoryUrl)" $(pwd)/repository
      cd repository
      git checkout "$(params.gitRepositoryRevision)"
    volumeMounts:
    - mountPath: /workspace/repository
      name: repository
    workingDir: /workspace
  - image: alpine/git:v2.26.2
    name: update-yaml
    resources: {}
    script: |
      #!/usr/bin/env sh
      set -e

      if [[ "$(params.verbose)" == "true" ]] ; then
        echo "**** Updating $(params.fileName) image to $(params.image):$(params.imageTag)"
      fi

      sed -i "s#$(params.image):[a-zA-Z0-9-]\\+#$(params.image):$(params.imageTag)#" ./$(params.gitPath)/$(params.fileName)
    volumeMounts:
    - mountPath: /workspace/repository
      name: repository
    workingDir: /workspace/repository
  - image: alpine/git:v2.26.2
    name: commit-push-changes
    resources: {}
    script: |
      #!/usr/bin/env sh
      set -e

      git config --global user.email "tekton@tekton.dev"
      git config --global user.name "OpenShift Pipeline"
      git add .
      git commit --allow-empty -m "[OpenShift Pipeline] Updating $(params.fileName) image to $(params.image):$(params.imageTag)"
      git push origin "$(params.gitRepositoryRevision)"
    volumeMounts:
    - mountPath: /workspace/repository
      name: repository
    workingDir: /workspace/repository
  volumes:
  - emptyDir: {}
    name: repository
